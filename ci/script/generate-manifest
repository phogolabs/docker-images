#!/usr/bin/env ruby

require 'yaml'

def expand_path(path)
  File.expand_path("../#{path}", __dir__)
end

def configure_resources(config)
  resources = []
  pipeline_resources = YAML.load_file(expand_path('resources.yml'))
  pipeline_resources.each do |resource|
    case resource['name']
    when 'docker-hub'
      resource = configure_docker_hub_resource(resource, config)
    end

   resources << resource
  end

  resources
end

def configure_docker_hub_resource(resource, config)
  resource['name'] = config['pipeline-name']
  resource['source']['repository'] = config['docker-hub-image']
  resource
end

def configure_jobs(config)
  jobs = []
  pipeline_name = config['pipeline-name']
  pipeline_jobs = YAML.load_file(expand_path('jobs.yml'))
  pipeline_jobs.each do |job|
    job['name'] = "build-#{pipeline_name}"

    docker_hub_job = job['plan'].find do |task|
      task['put'] == 'docker-hub'
    end

    docker_hub_job['put'] = pipeline_name
    docker_hub_job['params']['build'] = "docker-images/#{pipeline_name}"

    jobs << job.to_h
  end

  jobs
end

def generate_docker_image_pipeline(pipeline_config_path)
  pipeline_config = YAML.load_file(pipeline_config_path)
  pipeline_manifest = Hash.new
  pipeline_manifest['jobs'] = configure_jobs(pipeline_config)
  pipeline_manifest['resources'] = configure_resources(pipeline_config)
  pipeline_manifest
end

def generate_pipeline_manifest
  manifest = Hash.new
  Dir.glob(expand_path('../*/config.yml')) do |config|
    manifest = manifest.merge(generate_docker_image_pipeline(config)) do |key, old_value, new_value|
      (old_value + new_value).uniq
    end
  end

  group_jobs = manifest.fetch('jobs').map do |job|
    job['name']
  end

  manifest['groups'] = [{ "name" => 'docker-images', "jobs" => group_jobs }]
  manifest
end

puts generate_pipeline_manifest.to_yaml.gsub('"', '')
